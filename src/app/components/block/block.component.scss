/* Optimized block component styles - Reduced from 516 to ~250 lines */

/* Drag and drop */
.drag-handle {
    cursor: move;
    user-select: none;
    padding: 4px 8px;
    background: #f0f0f0;
    border-radius: 4px;
    margin-right: 8px;
    display: inline-block;
}

/* PrimeNG overrides - consolidated */
:host ::ng-deep {
    .p-treenode-content {
        cursor: default;
        padding: 0;
    }

    .p-treenode-content:not(.p-highlight):hover {
        background: transparent;
    }

    .p-tree {
        padding: 0;
        border: none;
        background: transparent;
    }

    .p-tree-container {
        padding: 0;
    }

    .p-dropdown {
        background-color: white;
        border: 1px solid #dee2e6;
        border-radius: 4px;
    }

    .p-dropdown:not(.p-disabled).p-focus {
        border-color: #80bdff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .p-dropdown .p-dropdown-label {
        padding: 8px;
        color: #495057;
        display: flex;
        align-items: center;
        height: 100%;
    }

    .p-dropdown .p-dropdown-trigger {
        background-color: transparent;
        color: #6c757d;
        display: flex;
        align-items: center;
    }

    .p-dropdown .p-dropdown-panel {
        background-color: white;
        border: 1px solid #dee2e6;
        border-radius: 4px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .p-dropdown .p-dropdown-items {
        padding: 0;
    }

    .p-dropdown .p-dropdown-item {
        padding: 8px;
        color: #495057;
        background-color: transparent;
        display: flex;
        align-items: center;
    }

    .p-dropdown .p-dropdown-item:hover {
        background-color: #f8f9fa;
    }

    .p-dropdown .p-dropdown-item.p-highlight {
        background-color: #e3f2fd;
        color: #495057;
    }
}

/* Block layout */
.block-content {
  position: relative;
  width: 100%;
  background-color: transparent;
  padding: 2px 8px;
  border-radius: 4px;
  border: 1px solid #ddd;
  margin-bottom: 3px;
}

.block-header {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  width: 100%;
  min-height: 40px;
  padding: 5px 0;
  margin: 0;
}

.header-item {
  display: table-cell;
  vertical-align: middle;
  padding: 0 5px 0 0;
  white-space: nowrap;
  margin-right: 10px;
}

/* Header sections */
.block-label {
  width: 120px;
}

.block-controls {
  width: 110px;
}

.repetitions-container {
  width: 100px;
}

.notes-container {
  width: auto;
}

/* Block name input */
.block-name-input {
  width: 100%;
  padding: 4px 8px;
  border: 1px solid transparent;
  border-radius: 4px;
  background-color: transparent;
  font-weight: bold;
  transition: border-color 0.2s;
}

.block-name-input:focus {
  outline: none;
  border-color: #ccc;
  background-color: rgba(255, 255, 255, 0.1);
}

.block-name-input::placeholder {
  color: #666;
}

/* Form elements */
.repetitions-input {
  width: 45px;
  height: 30px;
  padding: 0 2px;
  text-align: center;
}

input[type="number"]#repeatingTimes {
  width: 45px;
  max-width: 45px;
  box-sizing: border-box;
  padding: 0 2px;
}

.block-body {
  margin-top: 3px;
}

/* Melody editor container */
.melody-editor-container {
  position: relative;
  display: flex;
  align-items: center;
  background-color: white;
  min-height: 60px;
  padding: 0;
  outline: none;
}

/* Responsive design */
@media screen and (max-width: 768px) {
  .block-header {
    display: table;
    table-layout: fixed;
    min-width: 500px;
  }
}

/* Universal box-sizing */
.block-header *,
.block-content * {
  box-sizing: border-box;
}

/* Form alignment */
.block-header span,
.block-header input,
.block-header select,
.block-header button {
  display: inline-block;
  vertical-align: middle;
}

.block-name {
  position: relative;
  display: inline-block;
  padding-right: 15px;
}

.hidden-button {
  display: none !important;
}

.melody-variable-container {
  position: relative;
  width: 100%;
  
  .variable-icon {
    position: absolute;
    right: 4px;
    top: 4px;
    font-size: 0.8em;
    cursor: pointer;
    color: #666;
    transition: color 0.2s;
    z-index: 1;

    &:hover {
      color: #000;
    }
  }
}

.melody-dropdown-container {
  position: relative;

  .dropdown-wrapper {
    position: relative;

    &:hover {
      .dropdown-variable-icon {
        opacity: 1;
        visibility: visible;
      }
    }
    
    ::ng-deep p-dropdown {
      width: 230px !important;
      max-width: none !important;
      
      .p-dropdown {
        width: 230px !important;
        max-width: none !important;
      }
    }
  }
  
  .dropdown-variable-icon {
    position: absolute;
    right: 8px;
    top: -8px;
    cursor: pointer;
    z-index: 2;
    font-size: 0.8em;
    color: #666;
    background-color: white;
    padding: 0 2px;
    border-radius: 3px;
    border: 1px solid #ccc;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.2s, visibility 0.2s;
    
    &:hover {
      background-color: #f0f0f0;
    }
  }
}

.melody-editor-inline-container {
  flex-grow: 1;
  min-width: 100px;

  ::ng-deep app-melody-editor-wrapper {
    .notes-container {
      display: flex;
      flex-wrap: wrap !important;
      align-items: center;
      gap: 4px;
    }
  }
}

/* Add styles here to hide the default p-tree toggler */
/* Corrected selector: Target the toggler directly within the node content */
::ng-deep .p-treenode-content .p-tree-toggler {
  display: none !important; /* Hide the default toggler generated by p-tree */
}

/* Ensure our custom button and the placeholder have consistent vertical alignment */
.block-toggler-button,
.block-toggler-placeholder {
  width: 2rem; /* Match default toggler width approx */
  display: inline-block; /* Ensure they take up space */
  vertical-align: middle; /* Align vertically with other header items */
  margin-right: 0.5rem; /* Add some spacing */
}

.block-toggler-placeholder {
  /* Make placeholder invisible but take up space */
  visibility: hidden;
} 